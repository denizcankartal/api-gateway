-- Circuit Breaker Log Phase Handler
-- Tracks failures and successes after request completes

local circuit_dict = ngx.shared.circuit_breaker
local metrics_dict = ngx.shared.metrics

-- Use global configuration from init.lua
local config = _G.gateway.config.circuit_breaker
local CLOSED = _G.gateway.CIRCUIT_STATES.CLOSED
local OPEN = _G.gateway.CIRCUIT_STATES.OPEN
local HALF_OPEN = _G.gateway.CIRCUIT_STATES.HALF_OPEN

-- Set circuit state
local function set_circuit_state(service, state)
    local state_key = "cb:" .. service .. ":state"
    circuit_dict:set(state_key, state)
end

-- Main log handler
local ctx_route = ngx.ctx.circuit_breaker_route
if not ctx_route then return end

local status = ngx.status
local ctx_state = ngx.ctx.circuit_breaker_state
local now = ngx.now()

-- Track failures (5xx errors)
if status >= 500 then
    -- Ignore failures generated by an already open circuit to avoid resetting timers
    if ctx_state == OPEN then
        return
    end

    local failures_key = "cb:" .. ctx_route .. ":failures"
    local window_key = "cb:" .. ctx_route .. ":window_start"
    local window_start = circuit_dict:get(window_key)
    if not window_start or (now - window_start) > config.window then
        circuit_dict:set(window_key, now)
        circuit_dict:set(failures_key, 0)
    end

    local failures, err = circuit_dict:incr(failures_key, 1, 0)
    if not failures then
        ngx.log(ngx.ERR, "Failed to update circuit breaker failures for ", ctx_route, ": ", err)
        return
    end

    -- Check if should open
    if failures >= config.failure_threshold then
        set_circuit_state(ctx_route, OPEN)
        circuit_dict:set("cb:" .. ctx_route .. ":open_time", now)
        ngx.log(ngx.ERR, "Circuit breaker OPENED for ", ctx_route, " (failures: ", failures, ")")
        metrics_dict:incr("metric:circuit_opened:" .. ctx_route, 1, 0)
    end
-- Track successes (2xx, 3xx, 4xx)
elseif status < 500 and ctx_state == HALF_OPEN then
    local successes_key = "cb:" .. ctx_route .. ":successes"
    circuit_dict:incr(successes_key, 1, 0)

    -- Check if should close
    local successes = circuit_dict:get(successes_key) or 0
    if successes >= config.success_threshold then
        set_circuit_state(ctx_route, CLOSED)
        circuit_dict:set("cb:" .. ctx_route .. ":failures", 0)
        circuit_dict:set("cb:" .. ctx_route .. ":successes", 0)
        circuit_dict:delete("cb:" .. ctx_route .. ":window_start")
        ngx.log(ngx.NOTICE, "Circuit breaker CLOSED for ", ctx_route, " (successes: ", successes, ")")
        metrics_dict:incr("metric:circuit_closed:" .. ctx_route, 1, 0)
    end
end
